#include "convert_base.h"
#include <stdlib.h>

//Write a function that returns the result from the nbr string conversion (expressed in a base_from radix to a base_to radix), in the form of a newly, and sufficiently, allocated string. The number, represented by nbr, fits in an integer. The function must be prototyped as follows: char * convert_base ( char const * nbr , char const * base_from , char const * base_to ) ;

int get_base_index(char c, const char *base)
{
	int i = 0;

	while(base[i] != '\0')
	{
		if(base[i] == c)
		{
			return i;
		}

		i++;
	}

	return -1;
}

int strToInt(const char *nbr, const char *base_from)
{
	int base_length = 0;
	int result = 0;
	int sign = 1;
	int i = 0;
	int idx;

	while(base_from[base_length] != '\0')
	{
		base_length++;
	}

	if(nbr[0] == '-')
	{
		sign = -1;
		i++;
	}

	for(i = 0; nbr[i]; i++)
	{
		idx = get_base_index(nbr[i], base_from);
		if(idx == -1)
		{
			return 0;
		}

		result = result * base_lgenth + idx;
	}

	return result * sign;
}

char *intToStr(int nbr, const char *base_to)
{
	int base_length = 0;
	char buffer[65];
	int i = 0;
	
}

char *convert_base(char const *nbr, char const *base_from, char const *base_to)
{
	int value = strToInt(nbr, base_from);

	return intToStr(value, base_to);
}
